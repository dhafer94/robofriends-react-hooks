{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","containers/App.js","index.js"],"names":["Card","name","email","id","className","src","alt","CardList","searchfield","robots","map","robot","i","key","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundary","state","hasError","error","info","this","setState","hasErorr","Component","App","useState","setRobots","setSearchfield","useEffect","fetch","then","response","json","users","filteredRobot","filter","toLowerCase","includes","console","log","length","evt","target","value","ReactDOM","render","document","getElementById"],"mappings":"+MAgBeA,EAdF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GAG5B,OACC,yBAAKC,UAAU,uDACd,yBAAKC,IAAG,+BAA0BF,EAA1B,iBAA6CG,IAAI,WACzD,6BACC,4BAAKL,GACL,2BAAIC,MCKOK,EAXE,SAAC,GAA4B,EAA1BC,YAA2B,IAAdC,EAAa,EAAbA,OAC7B,OACI,oCACKA,EAAOC,KAAI,SAACC,EAAOC,GAChB,OAAO,kBAAC,EAAD,CAAMC,IAAKD,EAAGT,GAAIM,EAAOG,GAAGT,GAAIF,KAAMQ,EAAOG,GAAGX,KAAMC,MAAOO,EAAOG,GAAGV,aCO/EY,EAbG,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACpB,OACC,yBAAKX,UAAU,OACd,2BACCA,UAAU,mCACVY,KAAK,SACLC,YAAY,gBACZC,SAAUH,MCMCI,G,MAbA,SAACC,GACf,OACC,yBACCC,MAAO,CACNC,UAAW,SACXC,OAAQ,kBACRC,OAAQ,UAERJ,EAAMK,Y,4BCYKC,E,kDAnBd,WAAYN,GAAQ,IAAD,8BAClB,cAAMA,IACDO,MAAQ,CACZC,UAAU,GAHO,E,qDAOnB,SAAkBC,EAAOC,GACxBC,KAAKC,SAAS,CAAEC,UAAU,M,oBAG3B,WACC,OAAIF,KAAKJ,MAAMC,SACP,wDAEDG,KAAKX,MAAMK,a,GAhBQS,aCmEbC,MAxCf,WACC,MAA4BC,mBAAS,IAArC,mBAAO3B,EAAP,KAAe4B,EAAf,KACA,EAAsCD,mBAAS,IAA/C,mBAAO5B,EAAP,KAAoB8B,EAApB,KAEAC,qBAAU,WACTC,MAAM,8CACJC,MAAK,SAACC,GACN,OAAOA,EAASC,UAEhBF,MAAK,SAACG,GACNP,EAAUO,QAEV,IAEH,IAMMC,EAAgBpC,EAAOqC,QAAO,SAACrC,GACpC,OAAOA,EAAOR,KAAK8C,cAAcC,SAASxC,EAAYuC,kBAIvD,OADAE,QAAQC,IAAIzC,EAAQD,GACZC,EAAO0C,OAGd,yBAAK/C,UAAU,MACd,wBAAIA,UAAU,MAAd,eACA,kBAAC,EAAD,CAAWW,aAhBU,SAACqC,GACvBd,EAAec,EAAIC,OAAOC,UAgBzB,kBAAC,EAAD,KACC,kBAAC,EAAD,KACC,kBAAC,EAAD,CAAU7C,OAAQoC,OAPrB,wC,MChDFU,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.b5d03d85.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = ({ name, email, id }) => {\n\t// or Const Card = (props){const { name, email, id } = props;\n\t// .... etc }\n\treturn (\n\t\t<div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n\t\t\t<img src={`https://robohash.org/${id}?size=200x200`} alt='robots' />\n\t\t\t<div>\n\t\t\t\t<h2>{name}</h2>\n\t\t\t\t<p>{email}</p>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Card;\n","import React from 'react';\nimport Card from './Card'\n\n\nconst CardList = ({ searchfield, robots }) => {\n    return (\n        <>\n            {robots.map((robot, i) => {\n                return <Card key={i} id={robots[i].id} name={robots[i].name} email={robots[i].email} />\n            }\n            )}\n        </>\n    );\n};\n\nexport default CardList;\n","import React from 'react';\n\nconst SearchBox = ({ searchChange }) => {\n\treturn (\n\t\t<div className='pa2'>\n\t\t\t<input\n\t\t\t\tclassName='pa3 ba b--green bg-lightest-blue'\n\t\t\t\ttype='search'\n\t\t\t\tplaceholder='search robots'\n\t\t\t\tonChange={searchChange}\n\t\t\t/>\n\t\t</div>\n\t);\n};\n\nexport default SearchBox;\n","import React from 'react';\n\nconst Scroll = (props) => {\n\treturn (\n\t\t<div\n\t\t\tstyle={{\n\t\t\t\toverflowY: 'scroll',\n\t\t\t\tborder: '5px solid black',\n\t\t\t\theight: '800px',\n\t\t\t}}>\n\t\t\t{props.children}\n\t\t</div>\n\t);\n};\n\nexport default Scroll;\n","import React, { Component } from 'react';\n\nclass ErrorBoundary extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\thasError: false,\n\t\t};\n\t}\n\n\tcomponentDidCatch(error, info) {\n\t\tthis.setState({ hasErorr: true });\n\t}\n\n\trender() {\n\t\tif (this.state.hasError) {\n\t\t\treturn <h1>Oooops. That is not good</h1>;\n\t\t}\n\t\treturn this.props.children;\n\t}\n}\n\nexport default ErrorBoundary;\n","import React, { useState, useEffect } from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport './App.css';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundary from '../components/ErrorBoundary';\n\n// class App extends Component {\n// constructor() {\n// \tsuper();\n// \tthis.state = {\n// \t\trobots: [],\n// \t\tsearchfield: '',\n// \t};\n// \t// console.log('constructor');\n// }\n\n// componentDidMount() {\n// \tfetch('https://jsonplaceholder.typicode.com/users')\n// \t\t.then((response) => {\n// \t\t\treturn response.json();\n// \t\t})\n// \t\t.then((users) => {\n// \t\t\tthis.setState({ robots: users });\n// \t\t});\n// \t// this.setState({ robots: robots });\n// \t// console.log('componentDidMount');\n// }\n\nfunction App() {\n\tconst [robots, setRobots] = useState([]);\n\tconst [searchfield, setSearchfield] = useState('');\n\n\tuseEffect(() => {\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\n\t\t\t.then((response) => {\n\t\t\t\treturn response.json();\n\t\t\t})\n\t\t\t.then((users) => {\n\t\t\t\tsetRobots(users);\n\t\t\t});\n\t}, []);\n\n\tconst onSearchChange = (evt) => {\n\t\tsetSearchfield(evt.target.value);\n\n\t\t// console.log(filteredRobot);\n\t};\n\t// const { robots, searchfield } = this.state;\n\tconst filteredRobot = robots.filter((robots) => {\n\t\treturn robots.name.toLowerCase().includes(searchfield.toLowerCase());\n\t});\n\t// console.log('render');\n\tconsole.log(robots, searchfield);\n\treturn !robots.length ? (\n\t\t<h1>Loading</h1>\n\t) : (\n\t\t<div className='tc'>\n\t\t\t<h1 className='f1'>RoboFriends</h1>\n\t\t\t<SearchBox searchChange={onSearchChange} />\n\t\t\t<Scroll>\n\t\t\t\t<ErrorBoundary>\n\t\t\t\t\t<CardList robots={filteredRobot} />\n\t\t\t\t</ErrorBoundary>\n\t\t\t</Scroll>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\n// import reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}